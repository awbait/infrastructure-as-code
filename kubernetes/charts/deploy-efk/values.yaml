# ELASTIC CONFIG
elasticsearch:
  credentials:
    username: elastic # DO NOT CHANGE
    password: admin
  replicas: 2
  resources:
    requests:
      cpu: "4000m"
      memory: "6Gi"
    limits:
      cpu: "4000m"
      memory: "6Gi"
  volumeClaimTemplate:
    storageClassName: longhorn
  extraEnvs:
    - name: ELASTIC_PASSWORD
      valueFrom:
        secretKeyRef:
          name: elastic-credentials
          key: password
    - name: ELASTIC_USERNAME
      valueFrom:
        secretKeyRef:
          name: elastic-credentials
          key: username
  esConfig:
    elasticsearch.yml: |
      xpack.security.enabled: true
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.keystore.path: /usr/share/elasticsearch/config/certs-gen/elastic-certificates.p12
      xpack.security.transport.ssl.truststore.path: /usr/share/elasticsearch/config/certs-gen/elastic-certificates.p12
  extraVolumes:
  - name: tls-certificates
    emptyDir: {}
  extraVolumeMounts:
  - name: tls-certificates
    mountPath: /usr/share/elasticsearch/config/certs-gen
  extraInitContainers:
  - name: setup-tls-cert
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.1"
    command:
    - sh
    - -c
    - |
      #!/usr/bin/env bash
      set -euo pipefail

      elasticsearch-certutil cert \
        --name ${NODE_NAME} \
        --days 1000 \
        --ip ${POD_IP} \
        --dns ${NODE_NAME},${POD_SERVICE_NAME},${POD_SERVICE_NAME_HEADLESS},${NODE_NAME}.${POD_SERVICE_NAME},${NODE_NAME}.${POD_SERVICE_NAME_HEADLESS} \
        --ca-cert /usr/share/elasticsearch/config/certs/tls.crt \
        --ca-key /usr/share/elasticsearch/config/certs/tls.key  \
        --ca-pass "" \
        --pass "" \
        --out /usr/share/elasticsearch/config/certs-gen/elastic-certificates.p12
    env:
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: POD_SERVICE_NAME
      value: "elasticsearch-master"
    - name: POD_SERVICE_NAME_HEADLESS
      value: "elasticsearch-master-headless"
    volumeMounts:
    - name: elastic-certificates
      mountPath: /usr/share/elasticsearch/config/certs
    - name: tls-certificates
      mountPath: /usr/share/elasticsearch/config/certs-gen
  secretMounts:
    - name: elastic-certificates
      secretName: my-ca-cert
      path: /usr/share/elasticsearch/config/certs

# KIBANA CONFIG
kibana:
  elasticsearchHosts: "http://elasticsearch-master:9200"
  service:
    type: "LoadBalancer"
    annotations:
      metallb.universe.tf/allow-shared-ip: "efk-services"
  extraEnvs:
    - name: "ELASTICSEARCH_USERNAME"
      valueFrom:
        secretKeyRef:
          name: elastic-credentials
          key: username
    - name: "ELASTICSEARCH_PASSWORD"
      valueFrom:
        secretKeyRef:
          name: elastic-credentials
          key: password

# FLUENTD CONFIG
fluentd:
  ## Fluentd service
  service:
    type: "LoadBalancer"
    annotations:
      metallb.universe.tf/allow-shared-ip: "efk-services"
    ports:
    - name: collectors
      containerPort: 5140
      protocol: TCP
  ## Fluentd plugins:
  plugins:
    - fluent-plugin-multi-format-parser
  ## Fluentd configurations:
  fileConfigs:
    01_sources.conf: |-
      <source>
        @type tcp
        @label @ATLASSIAN_PREPARE
        bind 0.0.0.0
        port 5140
        tag atlassian.jira
        <parse>
          @type multiline
          format_firstline /\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}:\d{1,2},\d{1,3}/
          format1 /^(?<time>\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}:\d{1,2},\d{1,3})\s+(?<message>.*)/
        </parse>
      </source>
      <match atlassian.*>
        @type stdout
      </match>
    02_filters.conf: |-
      # Remove \n,\r,\t in text
      <label @ATLASSIAN_PREPARE>
        <match atlassian.jira>
          @type relabel
          @label @JIRA_LOG
        </match>
        <filter atlassian.*>
          @type record_transformer
          enable_ruby true
          auto_typecast true
          <record>    
            message ${record["message"].gsub(/[\r\n\t]+/, ' ')}
          </record>
        </filter>
      </label>
      # Parse log
      <label @JIRA_LOG>
        <filter atlassian.*>
          @type parser
          key_name message
          <parse>
            @type multi_format
            <pattern>
              format regexp
              expression /^(?<thread>\S+)\s+(?<level>(WARN|DEBUG|INFO|ERROR|FATAL))\s+(?<module>(?!\[)\S+)\s+\[(?<class>.*?)\]\s+(?<message>.*)/
            </pattern>
            <pattern>
              format regexp
              expression /^(?<thread>\S+)\s+(?<level>(WARN|DEBUG|INFO|ERROR|FATAL))\s+\[(?<class>.*?)\]\s+\[(?<module>.*?)\]\s+(?<message>.*)/
            </pattern>
            <pattern>
              format regexp
              expression /^(?<thread>\S+)\s+(?<level>(WARN|DEBUG|INFO|ERROR|FATAL))\s+(?<user>\S+)\s+[\w\s]+\s+[\w\s]+\s+(?<ip_address>[^,]+),[^,\ ]+\s+(?<path>\S+)\s+\[(?<class>.*?)\]\s+(?<message>.*)/
            </pattern>
          </parse>
        </filter>
        <filter atlassian.jira>
          @type record_transformer
          <record>
            hostname "#{Socket.gethostname}"
            log_name "/app/jira/data/log/atlassian-jira.log"
            application "jira"
            stack "production"
          </record>
        </filter>
        <match **>
          @type relabel
          @label @OUTPUT
        </match>
      </label>
    03_dispatch.conf: |-

    04_outputs.conf: |-
      <label @OUTPUT>
        <match **>
          @type elasticsearch
          host "elasticsearch-master"
          port 9200
          logstash_format true
          path ""
          user elastic
          password changeme
        </match>
      </label>
